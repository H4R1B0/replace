/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 room.glb -t -i -T --shadows 
Files: room.glb [21.14MB] > room-transformed.glb [2.86MB] (86%)
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import roomPath from "./room.glb?url";
import { Select } from "@react-three/postprocessing";
import { useToggle } from "react-use";

type GLTFResult = GLTF & {
  nodes: {
    trashCan_1: THREE.Mesh;
    trashCan_2: THREE.Mesh;
    radio_1: THREE.Mesh;
    radio_2: THREE.Mesh;
    winodw_1: THREE.Mesh;
    winodw_2: THREE.Mesh;
    winodw_3: THREE.Mesh;
    winodw_4: THREE.Mesh;
    winodw_5: THREE.Mesh;
    winodw_6: THREE.Mesh;
    winodw_7: THREE.Mesh;
    sideTable_1: THREE.Mesh;
    sideTable_2: THREE.Mesh;
    cabinet_1: THREE.Mesh;
    cabinet_2: THREE.Mesh;
    desk_1: THREE.Mesh;
    desk_2: THREE.Mesh;
    carpet_1: THREE.Mesh;
    carpet_2: THREE.Mesh;
    carpet_3: THREE.Mesh;
    carpet_4: THREE.Mesh;
    bed_1: THREE.Mesh;
    bed_2: THREE.Mesh;
    bed_3: THREE.Mesh;
    bed_4: THREE.Mesh;
    bed_5: THREE.Mesh;
    bed_6: THREE.Mesh;
    bed_7: THREE.Mesh;
    bed_8: THREE.Mesh;
    tableLamp_1: THREE.Mesh;
    tableLamp_2: THREE.Mesh;
    telephone: THREE.Mesh;
    frames_1: THREE.Mesh;
    frames_2: THREE.Mesh;
    frames_3: THREE.Mesh;
    frames_4: THREE.Mesh;
    space_1: THREE.Mesh;
    space_2: THREE.Mesh;
    space_3: THREE.Mesh;
    space_4: THREE.Mesh;
    space_5: THREE.Mesh;
    space_6: THREE.Mesh;
    space_7: THREE.Mesh;
    wallLamp_1: THREE.Mesh;
    wallLamp_2: THREE.Mesh;
  };
  materials: {
    ["OBJECTmain.004"]: THREE.MeshBasicMaterial;
    TRASHBODY: THREE.MeshBasicMaterial;
    OBJECTmain: THREE.MeshBasicMaterial;
    PaletteMaterial001: THREE.MeshStandardMaterial;
    ["sunset.004"]: THREE.MeshBasicMaterial;
    PaletteMaterial003: THREE.MeshStandardMaterial;
    ["Window frame"]: THREE.MeshBasicMaterial;
    PaletteMaterial004: THREE.MeshStandardMaterial;
    frame: THREE.MeshBasicMaterial;
    sunset: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    ["White.027"]: THREE.MeshBasicMaterial;
    Brown: THREE.MeshBasicMaterial;
    ["Bed frame.004"]: THREE.MeshStandardMaterial;
    ["White.017"]: THREE.MeshStandardMaterial;
    ["Brown.001"]: THREE.MeshBasicMaterial;
    ["White.012"]: THREE.MeshBasicMaterial;
    ["White.024"]: THREE.MeshBasicMaterial;
    ["Bed frame.009"]: THREE.MeshBasicMaterial;
    ["Brown.008"]: THREE.MeshBasicMaterial;
    ["White.025"]: THREE.MeshBasicMaterial;
    ["Brown.005"]: THREE.MeshBasicMaterial;
    ["Bed frame.008"]: THREE.MeshBasicMaterial;
    ["White.022"]: THREE.MeshBasicMaterial;
    ["Bed frame.005"]: THREE.MeshBasicMaterial;
    ["White.020"]: THREE.MeshBasicMaterial;
    blanket: THREE.MeshBasicMaterial;
    Grey: THREE.MeshBasicMaterial;
    ["Brown.004"]: THREE.MeshBasicMaterial;
    ["Brown.003"]: THREE.MeshBasicMaterial;
    ["White.004"]: THREE.MeshStandardMaterial;
    ["OBJECTmain.003"]: THREE.MeshBasicMaterial;
    framewhite: THREE.MeshBasicMaterial;
    ["FRAMEORANGE.002"]: THREE.MeshBasicMaterial;
    ["FRAMEORANGE.003"]: THREE.MeshBasicMaterial;
    ["FRAMEORANGE.005"]: THREE.MeshBasicMaterial;
    ["White.019"]: THREE.MeshBasicMaterial;
    ["frame.001"]: THREE.MeshBasicMaterial;
    ["Leaves.001"]: THREE.MeshBasicMaterial;
    ["Window frame.001"]: THREE.MeshStandardMaterial;
    ["Wall.001"]: THREE.MeshStandardMaterial;
    Wall: THREE.MeshStandardMaterial;
    Floor: THREE.MeshBasicMaterial;
    ["Material.021"]: THREE.MeshBasicMaterial;
    ["milky glass"]: THREE.MeshBasicMaterial;
  };
};
type RoomProps = {
  onTelephoneClick?: () => void;
  onTrashcanClick?: () => void;
  onFrameClick?: () => void;
  onRadioClick?: () => void;
} & JSX.IntrinsicElements["group"];

export default function Room({
  onTelephoneClick,
  onTrashcanClick,
  onFrameClick,
  onRadioClick,
  ...other
}: RoomProps) {
  const { nodes, materials } = useGLTF(roomPath) as GLTFResult;
  const [isTrashcanHovered, toggleTrashcanHovered] = useToggle(false);
  const [isRadioHovered, toggleRadioHovered] = useToggle(false);
  const [isFrameHovered, toggleFrameHovered] = useToggle(false);
  const [isPhoneHovered, togglePhoneHovered] = useToggle(false);

  return (
    <group {...other} dispose={null}>
      <Select enabled={isTrashcanHovered}>
        <group
          position={[0.387, 0.385, 2.985]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={1.47}
          onPointerOver={toggleTrashcanHovered}
          onPointerOut={toggleTrashcanHovered}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.trashCan_1.geometry}
            material={materials["OBJECTmain.004"]}
            onClick={onTrashcanClick}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.trashCan_2.geometry}
            material={materials.TRASHBODY}
          />
        </group>
      </Select>

      <group
        position={[0.419, 0.863, 1.881]}
        rotation={[Math.PI, -1.332, Math.PI]}
        scale={[0.269, 0.129, 0.087]}
      >
        <Select enabled={isRadioHovered}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.radio_1.geometry}
            material={materials.OBJECTmain}
            onPointerOver={toggleRadioHovered}
            onPointerOut={toggleRadioHovered}
            onClick={onRadioClick}
          />
        </Select>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.radio_2.geometry}
          material={materials.PaletteMaterial001}
        />
      </group>

      <group position={[0.142, 2.995, 1.198]} scale={[0.411, 0.559, 0.411]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.winodw_1.geometry}
          material={materials["sunset.004"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.winodw_2.geometry}
          material={materials.PaletteMaterial003}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.winodw_3.geometry}
          material={materials["Window frame"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.winodw_4.geometry}
          material={materials.PaletteMaterial004}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.winodw_5.geometry}
          material={materials.frame}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.winodw_6.geometry}
          material={materials.sunset}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.winodw_7.geometry}
          material={materials.PaletteMaterial002}
        />
      </group>
      <group position={[3.072, 0.174, 0.384]} scale={0.411}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sideTable_1.geometry}
          material={materials["White.027"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.sideTable_2.geometry}
          material={materials.Brown}
        />
      </group>
      <group position={[0.379, 0.182, 2.114]} scale={0.411}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.cabinet_1.geometry}
          material={materials["Bed frame.004"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.cabinet_2.geometry}
          material={materials["White.017"]}
        />
      </group>
      <group position={[0.898, 0.181, 1.108]} scale={0.411}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.desk_1.geometry}
          material={materials["Brown.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.desk_2.geometry}
          material={materials["White.012"]}
        />
      </group>
      <group position={[2.403, 0.194, 2.503]} scale={0.411}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.carpet_1.geometry}
          material={materials["White.024"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.carpet_2.geometry}
          material={materials["Bed frame.009"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.carpet_3.geometry}
          material={materials["Brown.008"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.carpet_4.geometry}
          material={materials["White.025"]}
        />
      </group>
      <group position={[1.757, 0.688, 2.021]} scale={0.411}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bed_1.geometry}
          material={materials["Brown.005"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bed_2.geometry}
          material={materials["Bed frame.008"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bed_3.geometry}
          material={materials["White.022"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bed_4.geometry}
          material={materials["Bed frame.005"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bed_5.geometry}
          material={materials["White.020"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bed_6.geometry}
          material={materials.blanket}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bed_7.geometry}
          material={materials.Grey}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bed_8.geometry}
          material={materials["Brown.004"]}
        />
      </group>
      <group position={[0.36, 0.711, 2.381]} scale={0.411}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.tableLamp_1.geometry}
          material={materials["Brown.003"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.tableLamp_2.geometry}
          material={materials["White.004"]}
        />
      </group>
      <Select enabled={isPhoneHovered}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.telephone.geometry}
          material={materials["OBJECTmain.003"]}
          position={[3.061, 0.706, 0.351]}
          rotation={[Math.PI, -1.309, Math.PI]}
          scale={0.14}
          onPointerOver={togglePhoneHovered}
          onPointerOut={togglePhoneHovered}
          onClick={onTelephoneClick}
        />
      </Select>
      <Select enabled={isFrameHovered}>
        <group
          position={[1.698, 1.577, 0.238]}
          rotation={[Math.PI, 0, Math.PI]}
          scale={[0.448, 0.537, 0.432]}
          onPointerOver={toggleFrameHovered}
          onPointerOut={toggleFrameHovered}
          onClick={onFrameClick}
        >
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.frames_1.geometry}
            material={materials.framewhite}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.frames_2.geometry}
            material={materials["FRAMEORANGE.002"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.frames_3.geometry}
            material={materials["FRAMEORANGE.003"]}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.frames_4.geometry}
            material={materials["FRAMEORANGE.005"]}
          />
        </group>
      </Select>
      <group position={[0.915, 1.586, 0.298]} scale={0.411}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.space_1.geometry}
          material={materials["White.019"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.space_2.geometry}
          material={materials["frame.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.space_3.geometry}
          material={materials["Leaves.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.space_4.geometry}
          material={materials["Window frame.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.space_5.geometry}
          material={materials["Wall.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.space_6.geometry}
          material={materials.Wall}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.space_7.geometry}
          material={materials.Floor}
        />
      </group>
      <group
        position={[2.14, 2.61, 0.188]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={2.193}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.wallLamp_1.geometry}
          material={materials["Material.021"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.wallLamp_2.geometry}
          material={materials["milky glass"]}
        />
      </group>
    </group>
  );
}

// useGLTF.preload("/room-transformed.glb");
