/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 flower.glb -t, -i, -T, s 
Files: flower.glb [9.18MB] > flower-transformed.glb [1.07MB] (88%)
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import tributePath from "./Tribute.glb?url";
// import { Select } from "@react-three/postprocessing";
// import { useToggle } from "react-use";

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh;
    ribbon: THREE.Mesh;
    Circle001: THREE.Mesh;
    Circle001_1: THREE.Mesh;
    Circle001_2: THREE.Mesh;
    Circle001_3: THREE.Mesh;
    White_Flower: THREE.Mesh;
    Cube002: THREE.Mesh;
    Cube002_1: THREE.Mesh;
    Cube002_2: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial005: THREE.MeshStandardMaterial;

    ["Flower-tulip Leaves.001"]: THREE.MeshStandardMaterial;
    ["Flower-tulip  stalk.001"]: THREE.MeshStandardMaterial;

    ["White Flower"]: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    PaletteMaterial003: THREE.MeshStandardMaterial;
    PaletteMaterial004: THREE.MeshStandardMaterial;
  };
};

// type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export default function Tribute(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(tributePath) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={materials.PaletteMaterial001}
        position={[-0.103, 5.198, 1.871]}
        rotation={[0.401, 0, 0]}
        scale={[1.092, 1.522, 0.152]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ribbon.geometry}
        material={materials.PaletteMaterial005}
        position={[-0.955, 6.569, 2.284]}
        rotation={[1.972, 0, Math.PI]}
        scale={0.03}
      />
      <group
        position={[1.153, 3.741, 0.647]}
        rotation={[Math.PI, 0, Math.PI]}
        scale={8.398}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle001.geometry}
          material={materials.PaletteMaterial002}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle001_1.geometry}
          material={materials["Flower-tulip Leaves.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle001_2.geometry}
          material={materials["Flower-tulip  stalk.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Circle001_3.geometry}
          material={materials.PaletteMaterial001}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.White_Flower.geometry}
        material={materials["White Flower"]}
        position={[1.154, 3.927, 0.635]}
        rotation={[Math.PI, 0, Math.PI]}
      />
      <group
        position={[-1.553, 3.74, 1.042]}
        rotation={[-Math.PI, 0, -Math.PI]}
        scale={4.018}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002.geometry}
          material={materials.PaletteMaterial002}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_1.geometry}
          material={materials.PaletteMaterial003}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cube002_2.geometry}
          material={materials.PaletteMaterial004}
        />
      </group>
    </group>
  );
}

// useGLTF.preload("/flower-transformed.glb");
