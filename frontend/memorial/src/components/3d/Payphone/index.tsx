/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 Payphone.glb -t -T -i s 
Files: Payphone.glb [646.98KB] > Payphone-transformed.glb [36.48KB] (94%)
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import payphonePath from "./Payphone.glb?url";

type GLTFResult = GLTF & {
  nodes: {
    PayPhone_1: THREE.Mesh;
    PayPhone_2: THREE.Mesh;
    Plane: THREE.Mesh;
    PayPhoneBooth: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
  };
};

// type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

type PayphoneProps = {
  onPayphoneClick?: () => void;
} & JSX.IntrinsicElements["group"];

export default function Payphone({ onPayphoneClick, ...other }: PayphoneProps) {
  const { nodes, materials } = useGLTF(payphonePath) as GLTFResult;
  return (
    <group
      {...other}
      dispose={null}
      scale={2.8}
      // rotation={[0, -Math.PI / 14, 0]}
    >
      <group
        position={[-0.122, 3.829, -0.338]}
        rotation={[Math.PI / 2, 0, -1.498]}
        scale={0.796}
      >
        <mesh
          geometry={nodes.PayPhone_1.geometry}
          material={nodes.PayPhone_1.material}
          // onClick={onPayphoneClick}
        />
        <mesh
          geometry={nodes.PayPhone_2.geometry}
          material={materials.PaletteMaterial001}
          onClick={onPayphoneClick}
        />
      </group>
      <mesh
        geometry={nodes.Plane.geometry}
        material={materials.PaletteMaterial001}
        scale={2.109}
      />
      <mesh
        geometry={nodes.PayPhoneBooth.geometry}
        material={materials.PaletteMaterial002}
        position={[1.393, 2.859, -1.641]}
        rotation={[-Math.PI, 0.349, Math.PI / 2]}
        scale={[1.885, 0.71, 0.71]}
      />
    </group>
  );
}

useGLTF.preload(payphonePath);
