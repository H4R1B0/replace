/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 house.glb -t -i -T --shadows 
Files: house.glb [2.15MB] > house-transformed.glb [230.5KB] (89%)
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import housePath from "./house.glb?url";

type GLTFResult = GLTF & {
  nodes: {
    mainWindow_1: THREE.Mesh;
    mainWindow_2: THREE.Mesh;
    mainWindow_3: THREE.Mesh;
    outdoorLight_1: THREE.Mesh;
    outdoorLight_2: THREE.Mesh;
    ground: THREE.Mesh;
    tree: THREE.Mesh;
    house: THREE.Mesh;
    door: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    PaletteMaterial003: THREE.MeshStandardMaterial;
    PaletteMaterial004: THREE.MeshStandardMaterial;
    PaletteMaterial005: THREE.MeshStandardMaterial;
    PaletteMaterial006: THREE.MeshStandardMaterial;
    PaletteMaterial007: THREE.MeshStandardMaterial;
    PaletteMaterial008: THREE.MeshStandardMaterial;
    PaletteMaterial009: THREE.MeshStandardMaterial;
  };
};
type HouseProps = {
  onHouseClick?: () => void;
} & JSX.IntrinsicElements["group"];

export default function House({ onHouseClick, ...other }: HouseProps) {
  const { nodes, materials } = useGLTF(housePath) as GLTFResult;
  return (
    <group {...other} dispose={null}>
      <group position={[4.214, 0, 5.839]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.mainWindow_1.geometry}
          material={materials.PaletteMaterial001}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.mainWindow_2.geometry}
          material={materials.PaletteMaterial002}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.mainWindow_3.geometry}
          material={materials.PaletteMaterial003}
        />
      </group>
      <group position={[4.214, 0, 5.839]} rotation={[Math.PI / 2, 0, 0]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.outdoorLight_1.geometry}
          material={materials.PaletteMaterial004}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.outdoorLight_2.geometry}
          material={materials.PaletteMaterial005}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.ground.geometry}
        material={materials.PaletteMaterial006}
        position={[4.214, 0, 5.839]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.tree.geometry}
        material={materials.PaletteMaterial007}
        position={[4.214, 0, 5.839]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.house.geometry}
        material={materials.PaletteMaterial008}
        position={[4.214, 0, 5.839]}
        rotation={[Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.door.geometry}
        material={materials.PaletteMaterial009}
        position={[4.214, 0, 5.839]}
        rotation={[Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/house-transformed.glb");
