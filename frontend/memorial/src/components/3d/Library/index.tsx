/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 library.glb -t, -i, -T, s 
Files: library.glb [26.76MB] > library-transformed.glb [5.13MB] (81%)
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import libraryPath from "./library.glb?url";
import { useEffect, useState } from "react";

type GLTFResult = GLTF & {
  nodes: {
    Window001: THREE.Mesh;
    Window034: THREE.Mesh;
    Letter: THREE.Mesh;
    Window013: THREE.Mesh;
    Window012: THREE.Mesh;
    bookShelf134: THREE.Mesh;
    bookShelf134_1: THREE.Mesh;
    bookShelf134_2: THREE.Mesh;
    bookShelf134_3: THREE.Mesh;
    Wood_Frame: THREE.Mesh;
    Wood_Frame_1: THREE.Mesh;
    Wood_Frame_2: THREE.Mesh;
    Wood_Frame_3: THREE.Mesh;
    Wood_Frame_4: THREE.Mesh;
    low_poly_interior037: THREE.Mesh;
    Plane006: THREE.Mesh;
    Procedural_Tree_2106: THREE.Mesh;
    Cube017: THREE.Mesh;
  };
  materials: {
    PaletteMaterial001: THREE.MeshStandardMaterial;
    // PaletteMaterial002: THREE.MeshStandardMaterial
    ["low_poly_interior.020"]: THREE.MeshStandardMaterial;
    PaletteMaterial003: THREE.MeshStandardMaterial;
    PaletteMaterial004: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.027"]: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    paper: THREE.MeshStandardMaterial;
    ["Dark Walnut"]: THREE.MeshPhysicalMaterial;
    Sand: THREE.MeshStandardMaterial;
    PaletteMaterial005: THREE.MeshStandardMaterial;
    ["Candle Flame"]: THREE.MeshStandardMaterial;
    PaletteMaterial006: THREE.MeshPhysicalMaterial;
    furniture: THREE.MeshStandardMaterial;
    ["C_Die-cast aluminum.001"]: THREE.MeshStandardMaterial;
    ["Tree Bark 08"]: THREE.MeshStandardMaterial;
    ["book-cover"]: THREE.MeshStandardMaterial;
  };
};

type LibraryProps = {
  onBookShelfClick?: () => void;
  onLetterClick?: () => void;
} & JSX.IntrinsicElements["group"];

export default function Library({
  onBookShelfClick,
  onLetterClick,
  ...other
}: LibraryProps) {
  const [lightIntensity, setLightIntensity] = useState(1);
  const [increasing, setIncreasing] = useState(true);

  useEffect(() => {
    const animateLight = () => {
      setLightIntensity((prevIntensity) => {
        let newIntensity;

        if (increasing) {
          newIntensity = prevIntensity + 0.05; // 변화량을 원하는 대로 조절할 수 있습니다.
        } else {
          newIntensity = prevIntensity - 0.05;
        }

        if (newIntensity >= 3) setIncreasing(false);
        if (newIntensity <= 1) setIncreasing(true);

        return newIntensity;
      });
    };

    const animationFrameId = requestAnimationFrame(animateLight); // 애니메이션 루프를 생성합니다.

    return () => cancelAnimationFrame(animationFrameId); // 컴포넌트가 unmount될 때 애니메이션을 취소합니다.
  }, [increasing, lightIntensity]);

  const { nodes, materials } = useGLTF(libraryPath) as GLTFResult;
  return (
    <group {...other} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Window001.geometry}
        material={materials.PaletteMaterial001}
        position={[-0.494, 2.036, 1.372]}
        rotation={[0, 1.571, 0]}
        scale={[0.411, 0.559, 0.411]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Window034.geometry}
        material={materials.PaletteMaterial002}
        position={[-2.303, 2.027, -0.504]}
        scale={[0.411, 0.559, 0.411]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Letter.geometry}
        material={materials["low_poly_interior.020"]}
        position={[0.085, 0.985, -1.379]}
        scale={2.167}
        onClick={onLetterClick}
      >
        <pointLight
          position={[0, 0, 0]}
          color={"#ffff44"}
          intensity={lightIntensity}
          distance={1}
        />
      </mesh>

      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Window013.geometry}
        material={materials.PaletteMaterial003}
        position={[-2.264, 2.017, -0.485]}
        scale={[0.411, 0.559, 0.431]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Window012.geometry}
        material={materials.PaletteMaterial004}
        position={[-2.264, 2.017, -0.485]}
        scale={[0.411, 0.559, 0.411]}
      />
      <group
        position={[-1.625, 0.861, -1.594]}
        scale={1.079}
        onClick={onBookShelfClick}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bookShelf134.geometry}
          material={materials["Material.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bookShelf134_1.geometry}
          material={materials["Material.027"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bookShelf134_2.geometry}
          material={materials.PaletteMaterial002}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.bookShelf134_3.geometry}
          material={materials.paper}
        />
      </group>
      <group
        position={[-1.595, 0.844, 0.498]}
        rotation={[0, 1.518, 0]}
        scale={1.441}
      >
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Wood_Frame.geometry}
          material={materials["Dark Walnut"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Wood_Frame_1.geometry}
          material={materials.Sand}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Wood_Frame_2.geometry}
          material={materials.PaletteMaterial005}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Wood_Frame_3.geometry}
          material={materials["Candle Flame"]}
        />

        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Wood_Frame_4.geometry}
          material={materials.PaletteMaterial006}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.low_poly_interior037.geometry}
        material={materials.furniture}
        position={[-0.033, 0.424, -1.489]}
        rotation={[0, -Math.PI / 2, 0]}
        scale={0.859}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane006.geometry}
        material={materials["C_Die-cast aluminum.001"]}
        position={[-1.637, 0.255, 0.493]}
        scale={[0.985, 1.389, 1.657]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Procedural_Tree_2106.geometry}
        material={materials["Tree Bark 08"]}
        position={[0.098, 1.274, -1.786]}
        scale={1.416}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube017.geometry}
        material={materials["book-cover"]}
        position={[0.723, 1.967, -1.936]}
        rotation={[Math.PI / 2, 0, -Math.PI / 2]}
        scale={1.213}
      />
    </group>
  );
}

useGLTF.preload(libraryPath);
